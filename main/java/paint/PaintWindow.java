package paint;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

/**
 *
 * @author samah
 */
public class PaintWindow extends javax.swing.JFrame implements Node{

    private DrawingEngine engine;
    private OvalWindow circle;
    private RectangleWindow rectangle;
    private SquareWindow square;
    private LineWindow line;
    private TriangleWindow triangle;
    private int CircleCounter,LineCounter,RectangleCounter,SquareCounter,TriangleCounter;
    public PaintWindow() {
        initComponents();
        engine = (DrawingEngine)jPanel1;
        ((MyPanel)engine).setComboBox(jComboBox1);
        circle = new OvalWindow();
        rectangle = new RectangleWindow ();
        square = new SquareWindow ();
        line = new LineWindow(); 
        triangle = new TriangleWindow();
        CircleCounter=LineCounter=RectangleCounter=SquareCounter=TriangleCounter=0;
    }
    public PaintWindow getPaint ()
    {
        return this;
    }
    public void AddToPanelAndToCombobox(Shape shape, String s)
    {
        engine.addShape(shape);
        engine.refresh(null);
        if (s.equals("Oval"))
        {
             jComboBox1.addItem(s+"_"+CircleCounter);
             CircleCounter++;
        }
        if (s.equals("Line"))
        {
             jComboBox1.addItem(s+"_"+LineCounter);
             LineCounter++;
        }
        if (s.equals("Rectangle"))
        {
             jComboBox1.addItem(s+"_"+RectangleCounter);
             RectangleCounter++;
        }
          if (s.equals("Square"))
        {
             jComboBox1.addItem(s+"_"+SquareCounter);
             SquareCounter++;
        }
          if (s.equals("Triangle"))
        {
             jComboBox1.addItem(s+"_"+TriangleCounter);
             TriangleCounter++;
        }
      
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new MyPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Drawing Application");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 310, Short.MAX_VALUE)
        );

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Rectangle");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setText("Square");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setText("Line Segment");
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setText("Oval");
        jButton4.setBorder(null);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Select Shape");

        jComboBox1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton5.setText("Colorize");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton6.setText("Delete");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton7.setText("Triangle");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton8.setText("Copy");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
                        .addGap(27, 27, 27)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(312, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        circle.setParentNode(this);
        this.setVisible(false);
        circle.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        line.setParentNode(this);
        this.setVisible(false);
        line.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        square.setParentNode(this);
        this.setVisible(false);
        square.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        rectangle.setParentNode(this);
        this.setVisible(false);
        rectangle.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int index = jComboBox1.getSelectedIndex();
        Shape [] shapes=engine.getShapes();
        try{
             Shape selectedshape= shapes[index];
        ColorizeWindow colorize= new ColorizeWindow(selectedshape,this.engine);
        colorize.setParentNode(this);
        this.setVisible(false);
        colorize.setVisible(true);   
        } catch(ArrayIndexOutOfBoundsException e)
        {
            JOptionPane.showMessageDialog(null,"No shapes yet!");
        }  
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int index = jComboBox1.getSelectedIndex();
        Shape [] shapes=engine.getShapes();
        try{
            Shape selectedshape= shapes[index];
            engine.removeShape(selectedshape);
            jComboBox1.removeItemAt(index);
        } catch (ArrayIndexOutOfBoundsException e)
        {
                   JOptionPane.showMessageDialog(null,"No shapes yet!");
        }
        engine.refresh(null);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:

        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        triangle.setParentNode(this);
        this.setVisible(false);
        triangle.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        int selectedIndex= jComboBox1.getSelectedIndex();
        Shape selectedShape= engine.getShapes()[selectedIndex];
        Shape copiedShape = null;
        
        if (selectedShape instanceof Rectangle )
        {
            copiedShape = new Rectangle (((Rectangle)selectedShape).getPosition(),((Rectangle)selectedShape).getWidth() ,((Rectangle)selectedShape).getHeight());
            AddToPanelAndToCombobox(copiedShape,"Rectangle");     
        } else if (selectedShape instanceof Triangle)
        {
            copiedShape= new Triangle (((Triangle)selectedShape).getPosition(),((Triangle)selectedShape).getP2(),((Triangle)selectedShape).getP3());
            AddToPanelAndToCombobox(copiedShape,"Triangle");
        } else if (selectedShape instanceof Line)
        {
            copiedShape = new Line (((Line)selectedShape).getPosition(),((Line)selectedShape).getP2());
              AddToPanelAndToCombobox(copiedShape,"Line");
        }
        else if (selectedShape instanceof Square)
        {
            copiedShape= new Square (((Square)selectedShape).getPosition(),((Square)selectedShape).getLength());
               AddToPanelAndToCombobox(copiedShape,"Square");
        } else if (selectedShape instanceof Oval)
        {
            copiedShape= new Oval (((Oval)selectedShape).getPosition(),((Oval)selectedShape).getRadius1(),((Oval)selectedShape).getRadius2());
             AddToPanelAndToCombobox(copiedShape,"Oval");
        }
        
        copiedShape.setColor(selectedShape.getColor());
        copiedShape.setFillColor(selectedShape.getFillColor());
        
        
          
    }//GEN-LAST:event_jButton8ActionPerformed
/*
        
     private void load(String absolutePath) throws FileNotFoundException, IOException, ParseException, org.json.simple.parser.ParseException {
        JSONParser parser = new JSONParser();

        Object obj = parser.parse(new FileReader(absolutePath));
        JSONArray shapes = (JSONArray) obj;
        for (int i = 0; i < shapes.size(); i++) {
            JSONObject j = (JSONObject) shapes.get(i);
            System.out.println(j.get("shapetype"));
        }
    }
    
    
    public void save(String filename) throws FileNotFoundException {
        JSONArray x = new JSONArray();

        for (int i=0 ;i< engine.getShapes().length;i++) {
            JSONObject obj = new JSONObject();
            if (engine.getShapes()[i] instanceof Rectangle) {
                Rectangle r = (Rectangle) engine.getShapes()[i];
                obj.put("shapetype", "rectangle");
                obj.put("x", r.getPosition().getX());
                obj.put("y", r.getPosition().getY());
                obj.put("width", r.getWidth());
                obj.put("height", r.getHeight());
                obj.put("Fill Color", r.getFillColor());
                obj.put("Border Color",r.getColor());
            } else if (engine.getShapes()[i] instanceof Line) {
                Line l = (Line) engine.getShapes()[i];
                obj.put("shapetype", "line");
                obj.put("x", l.getPosition().getX());
                obj.put("y", l.getPosition().getY());
                obj.put("Fill Color", l.getFillColor());
                obj.put("Border Color",l.getColor());
            } else if (engine.getShapes()[i] instanceof Square)
            {
                 Square r = (Square) engine.getShapes()[i];
                obj.put("shapetype", "Square");
                obj.put("x", r.getPosition().getX());
                obj.put("y", r.getPosition().getY());
                obj.put("length", r.getLength());
                obj.put("Fill Color", r.getFillColor());
                obj.put("Border Color",r.getColor());
            }else if (engine.getShapes()[i] instanceof Oval)
            {
                Oval r = (Oval) engine.getShapes()[i];
                obj.put("shapetype", "Oval");
                obj.put("x", r.getPosition().getX());
                obj.put("y", r.getPosition().getY());
                obj.put("Radius 1", r.getRadius1());
                obj.put("Radius 2", r.getRadius2());
                obj.put("Fill Color", r.getFillColor());
                obj.put("Border Color",r.getColor());
            } else if (engine.getShapes()[i] instanceof Triangle)
            {
                Triangle r = (Triangle)  engine.getShapes()[i];
                obj.put("shapetype","Triangle");
                obj.put("P1 x",r.getPosition().x);
                obj.put("P2 x",r.getP2().x);
                obj.put("P3 x",r.getP3().x);
                obj.put("P1 y",r.getPosition().y);
                obj.put("P2 y",r.getP2().y);
                obj.put("P3 y",r.getP3().y);
                obj.put("Fill Color", r.getFillColor());
                obj.put("Border Color",r.getColor());
            }
            
            
            x.add(obj);
        }
        PrintWriter pw = new PrintWriter(new File(filename));

        pw.print(x);

        pw.close();

    }
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaintWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaintWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaintWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaintWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaintWindow().setVisible(true);
            }
        });
    }

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public Node getParentNode() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void setParentNode(Node node) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
