package paint;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.util.ArrayList;
import javax.swing.JComboBox;

/**
 *
 * @author samah
 */
public class MyPanel extends javax.swing.JPanel implements DrawingEngine {

    private ArrayList<Shape> shapes;
    private Movable movable;
    private JComboBox comboBox;
   
    public void setComboBox(JComboBox box)
   {
       this.comboBox=box;
   }
    public MyPanel() {
        initComponents();
        shapes = new ArrayList<>();
        addMouseListener(new MouseAdapter() {
            
             @Override
            public void mousePressed(MouseEvent e) {
              Movable currentshape;
              
              for (int i=0; i< shapes.size();i++)
                {
                    currentshape=(Movable)shapes.get(i);
                    if (currentshape.contains(e.getPoint()))
                    {
                        movable = currentshape;
                        comboBox.setSelectedIndex(i);
                        currentshape.setDraggingPoint(e.getPoint());   
                        break;
                    }
                    
                }
                  
            }
            @Override
            public void mouseReleased(MouseEvent e) {
             
                 if (movable == null)
                  return ;
            
            movable.moveTo(e.getPoint());
            
            refresh(null);
            movable=null;
                
            }

            
        });
        addMouseMotionListener(new MouseMotionAdapter(){
            @Override
            public void mouseDragged(MouseEvent e) {
            if (movable == null)
                  return ;
           
            movable.moveTo(e.getPoint());
            refresh(null);
            movable.setDraggingPoint(e.getPoint());
         
            
            }
                    
        });
        
    }
    

     /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    @Override
    public void paintComponent(Graphics g)
    {
        super.paintComponent(g);
        for (Shape shape : shapes) {
            shape.draw(g);
        }
    }
    
    @Override
    public void addShape(Shape shape) {
       shapes.add(shape);
    }

    @Override
    public void removeShape(Shape shape) {
       shapes.remove(shape);
    }

    @Override
    public Shape[] getShapes() {
      return shapes.toArray(Shape[]:: new);
    }

    @Override
    public void refresh(Graphics canvas) {
       repaint();  
    }

  


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
